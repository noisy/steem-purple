#ifndef MESSAGE_H
 #define MESSAGE_H
#include "package.h"

int mrim_send_im(PurpleConnection *gc, const char *to, const char *message, PurpleMessageFlags flags);
gboolean mrim_send_attention(PurpleConnection  *gc, const char *username, guint type);
unsigned int mrim_send_typing(PurpleConnection *gc, const char *name,PurpleTypingState typing);
/*
 * Send SMS @message to @phone
 */
gboolean mrim_send_sms(gchar *phone, gchar *message, mrim_data *mrim);
void mrim_sms_ack(mrim_data *mrim ,package *pack);

void mrim_message_offline(PurpleConnection *gc, char* message);
void mrim_read_im(mrim_data *mrim, package *pack);

GList *mrim_chat_info(PurpleConnection *gc);
GHashTable *mrim_chat_info_defaults(PurpleConnection *gc, const char *chat_name);
void mrim_chat_join(PurpleConnection *gc, GHashTable *components);
void mrim_reject_chat(PurpleConnection *gc, GHashTable *components);
char *mrim_get_chat_name(GHashTable *components);
void mrim_chat_invite(PurpleConnection *gc, int id, const char *message, const char *who);
void mrim_chat_leave(PurpleConnection *gc, int id);
void mrim_chat_whisper(PurpleConnection *gc, int id, const char *who, const char *message);
int mrim_chat_send(PurpleConnection *gc, int id, const char *message, PurpleMessageFlags flags);
void mirm_set_chat_topic(PurpleConnection *gc, int id, const char *topic);
//PurpleChat *(* 	find_blist_chat )(PurpleAccount *account, const char *name)
//PurpleRoomlist *(* 	roomlist_get_list )(PurpleConnection *gc)
//void(* 	roomlist_cancel )(PurpleRoomlist *list)
//void(* 	roomlist_expand_category )(PurpleRoomlist *list, PurpleRoomlistRoom *category)
//char *(* 	roomlist_room_serialize )(PurpleRoomlistRoom *room)
//PurpleMood *(* 	get_moods )(PurpleAccount *account)

void mrim_message_status(package *pack);


static char buzz_mas[] = {
0xd8, 0x00, 0x00, 0x00, 0x65, 0x4e, 0x6f,
0x31, 0x6a, 0x6b, 0x30, 0x4f, 0x67, 0x6a, 0x41,
0x55, 0x68, 0x42, 0x76, 0x6a, 0x69, 0x6f, 0x51,
0x37, 0x63, 0x49, 0x51, 0x57, 0x4d, 0x4e, 0x46,
0x77, 0x44, 0x5a, 0x65, 0x7a, 0x4b, 0x66, 0x32,
0x42, 0x78, 0x74, 0x71, 0x53, 0x74, 0x75, 0x69,
0x43, 0x63, 0x43, 0x68, 0x50, 0x69, 0x41, 0x58,
0x6a, 0x34, 0x6b, 0x33, 0x65, 0x34, 0x70, 0x74,
0x38, 0x63, 0x79, 0x4b, 0x45, 0x66, 0x50, 0x49,
0x74, 0x43, 0x45, 0x6b, 0x7a, 0x63, 0x42, 0x66,
0x4e, 0x45, 0x57, 0x49, 0x61, 0x57, 0x48, 0x31,
0x68, 0x6b, 0x45, 0x70, 0x72, 0x75, 0x71, 0x66,
0x6c, 0x62, 0x6d, 0x43, 0x30, 0x76, 0x53, 0x33,
0x51, 0x33, 0x71, 0x58, 0x55, 0x32, 0x2f, 0x78,
0x51, 0x61, 0x47, 0x63, 0x73, 0x74, 0x42, 0x68,
0x35, 0x69, 0x43, 0x72, 0x56, 0x74, 0x4b, 0x33,
0x75, 0x66, 0x50, 0x52, 0x50, 0x33, 0x71, 0x31,
0x72, 0x57, 0x53, 0x77, 0x51, 0x33, 0x76, 0x71,
0x51, 0x30, 0x61, 0x70, 0x44, 0x55, 0x4a, 0x4a,
0x69, 0x43, 0x45, 0x6f, 0x35, 0x69, 0x74, 0x37,
0x4f, 0x69, 0x6e, 0x61, 0x5a, 0x77, 0x4d, 0x75,
0x6f, 0x39, 0x38, 0x4d, 0x34, 0x32, 0x57, 0x49,
0x57, 0x44, 0x42, 0x4d, 0x50, 0x45, 0x69, 0x4b,
0x76, 0x2b, 0x4c, 0x6d, 0x61, 0x35, 0x6a, 0x42,
0x45, 0x64, 0x71, 0x30, 0x69, 0x2f, 0x76, 0x6f,
0x64, 0x4b, 0x6f, 0x76, 0x63, 0x50, 0x65, 0x66,
0x52, 0x32, 0x37, 0x61, 0x52, 0x4c, 0x36, 0x6c,
0x57, 0x51, 0x53, 0x63, 0x3d };

#endif
